/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useCallback, useEffect, useRef, useState } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import * as THREE from "three";

import { GLB_ASSET_URLS } from "@/js/core/constants";
import {
    ItemMaterialYellow,
    ItemMaterialYellowDark,
    OutlineMaterial,
} from "../Materials";

export default function Model({ opacity = 1, ...props }) {
    const [mounted, setMounted] = useState(true);
    const [boundingBox, setBoundingBox] = useState({
        min: new THREE.Vector3(0, 0, 0),
        max: new THREE.Vector3(1, 1, 1),
    });
    const group = useRef();
    const { nodes, animations } = useGLTF(GLB_ASSET_URLS.Culture);
    const { actions, names } = useAnimations(animations, group);

    const handleClick = useCallback(() => {
        actions?.explode_01.reset().play();
        actions?.explode_02.reset().play();
        actions?.explode_03.reset().play();
        actions?.explode_04.reset().play();
    }, [actions]);

    useEffect(() => {
        if (!mounted) return;
        if (Object.keys(actions).length === 0) return;
        names.forEach((name) => {
            const action = actions[name];
            switch (name) {
                case "culture_orbit":
                    action.play();
                    break;
                case "explode_01":
                case "explode_02":
                case "explode_03":
                case "explode_04":
                    action.setLoop(THREE.LoopOnce);
                    break;
                default:
                    break;
            }
        });
    }, [mounted, actions, names]);

    // setup uniforms
    useEffect(() => {
        const bb = new THREE.Box3();
        bb.setFromObject(group.current);
        setBoundingBox(bb);
    }, []);

    useEffect(() => {
        setMounted(true);
    }, []);
    return (
        <group
            {...props}
            name="CultureModel"
            ref={group}
            dispose={null}
            onClick={handleClick}
        >
            <group name="Scene">
                <group name="culture">
                    <group name="rotation_null015">
                        <mesh
                            name="camera"
                            geometry={nodes.camera.geometry}
                            //   material={materials.green_01}
                            morphTargetDictionary={
                                nodes.camera.morphTargetDictionary
                            }
                            morphTargetInfluences={
                                nodes.camera.morphTargetInfluences
                            }
                            position={[0.033, -0.076, -0.111]}
                            rotation={[0, -Math.PI / 9, 0]}
                        >
                            <ItemMaterialYellow
                                opacity={opacity}
                                boundingBox={boundingBox}
                            />
                        </mesh>
                        <mesh
                            name="camera_outline"
                            geometry={nodes.camera_outline.geometry}
                            //   material={materials.outline}
                            morphTargetDictionary={
                                nodes.camera_outline.morphTargetDictionary
                            }
                            morphTargetInfluences={
                                nodes.camera_outline.morphTargetInfluences
                            }
                            position={[0.033, -0.076, -0.111]}
                            rotation={[0, -Math.PI / 9, 0]}
                        >
                            <OutlineMaterial opacity={opacity} />
                        </mesh>
                        <mesh
                            name="frame"
                            geometry={nodes.frame.geometry}
                            //   material={materials.green_02}
                            morphTargetDictionary={
                                nodes.frame.morphTargetDictionary
                            }
                            morphTargetInfluences={
                                nodes.frame.morphTargetInfluences
                            }
                            position={[0.033, -0.076, -0.111]}
                            rotation={[0, -Math.PI / 9, 0]}
                        >
                            <ItemMaterialYellowDark
                                opacity={opacity}
                                boundingBox={boundingBox}
                            />
                        </mesh>
                        <mesh
                            name="frame_outline"
                            geometry={nodes.frame_outline.geometry}
                            //   material={materials.outline}
                            morphTargetDictionary={
                                nodes.frame_outline.morphTargetDictionary
                            }
                            morphTargetInfluences={
                                nodes.frame_outline.morphTargetInfluences
                            }
                            position={[0.033, -0.076, -0.111]}
                            rotation={[0, -Math.PI / 9, 0]}
                        >
                            <OutlineMaterial opacity={opacity} />
                        </mesh>
                    </group>
                </group>
            </group>
        </group>
    );
}

useGLTF.preload(GLB_ASSET_URLS.Culture);
